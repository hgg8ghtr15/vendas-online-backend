######NPM update
npm update -g

###### Instalação do nestjs.js
 npm i -g @nestjs/cli

Configurações banco de dados https://docs.nestjs.com/techniques/configuration
npm i --save @nestjs/config 

instalações   https://docs.nestjs.com/recipes/sql-typeorm
npm install --save typeorm pg @nestjs/typeorm

criação da conexão com banco
https://docs.nestjs.com/techniques/database

--Execução
npm run start
npm run start:dev

-- corrgige erro slint
npm run lint

####### Criação das migration
--cria o arquivo da migration
npx typeorm migration:create ./src/migration/create_table_user

####### Criação de cash  https://docs.nestjs.com/techniques/caching
npm install @nestjs/cache-manager cache-manager


ctrl + p 
settings.json
    "editor.codeActionsOnSave": {
            "source.fixAll": "explicit"
        },
        "[javascript]": {
        "editor.codeActionsOnSave": {
                "source.fixAll.eslint": "explicit"
            }   
        },
        "[typescript]": {
            "editor.defaultFormatter": "esbenp.prettier-vscode",
            "editor.codeActionsOnSave": {
                "source.fixAll.eslint": "explicit"
            }
        },


-- Cria o modelo
nest g module user
nest g controller user
nest g service user


###########  Doker   https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/
Criar uma imagem do postgree
    docker pull postgres

start
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres




